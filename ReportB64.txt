Hive (C:\Users\Esteban\OneDrive\Escritorio\Documentos\NTUSER.DAT) is not dirty.

adobe v.20200522
(NTUSER.DAT) Gets user's Adobe app cRecentFiles values

Could not access Software\Adobe\Adobe Acrobat\\AVGeneral\cRecentFiles

Could not access Software\Adobe\Acrobat Reader\\AVGeneral\cRecentFiles

----------------------------------------
allowedenum v.20200511
(NTUSER.DAT, Software) Extracts AllowedEnumeration values to determine hidden special folders

Software\Microsoft\Windows\CurrentVersion\Explorer\AllowedEnumeration not found.
Microsoft\Windows\CurrentVersion\Explorer\AllowedEnumeration not found.
----------------------------------------
appassoc v.20200515
- Gets contents of user's ApplicationAssociationToasts key

LastWrite: 2021-11-01 20:44:25Z

AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.3g2
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.3g2
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.3g2
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.3gp
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.3gp
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.3gp
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.3gp2
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.3gpp
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.3gpp
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.3gpp
AppXmgw6pxxs62rbgfp9petmdyb4fx7rnd4k_.3mf
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.3mf
AppXr0rz9yckydawgnrx5df1t9s57ne60yhn_.3mf
AppXvhc4p7vz4b485xfp46hhk3fq3grkdgjg_.3mf
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.aac
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.aac
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.ac3
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.adt
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.adt
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.adts
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.adts
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.amr
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.arw
WMP11.AssocFile.ASF_.asf
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.asf
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.avi
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.avi
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.avi
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.bmp
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.cr2
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.crw
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.dib
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.divx
docxfile_.docx
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.ec3
AppXvepbp3z66accmsd0x877zbbxjctkpr6t_.epub
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.erf
AppXmgw6pxxs62rbgfp9petmdyb4fx7rnd4k_.fbx
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.fbx
AppXr0rz9yckydawgnrx5df1t9s57ne60yhn_.fbx
AppXvhc4p7vz4b485xfp46hhk3fq3grkdgjg_.fbx
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.flac
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.flac
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.gif
AppXmgw6pxxs62rbgfp9petmdyb4fx7rnd4k_.glb
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.glb
AppXr0rz9yckydawgnrx5df1t9s57ne60yhn_.glb
AppXvhc4p7vz4b485xfp46hhk3fq3grkdgjg_.glb
AppXmgw6pxxs62rbgfp9petmdyb4fx7rnd4k_.gltf
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.gltf
AppXr0rz9yckydawgnrx5df1t9s57ne60yhn_.gltf
AppXvhc4p7vz4b485xfp46hhk3fq3grkdgjg_.gltf
AppX4hxtad77fbk3jkkeerkrm0ze94wjf3s9_.htm
AppX4hxtad77fbk3jkkeerkrm0ze94wjf3s9_.html
icofile_.ico
PBrush_.ico
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.ico
AppXzwr976v2e060wada4gabrk1x69h2dbwy_.inf
AppXhk4des8gf2xat3wtyzc5q06ny78jhkqx_.ini
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.jfif
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.jpe
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.jpeg
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.jpg
AppXfeqk92xmhxtyxytgbhn7tdqk70syjc6v_.jpg
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.kdc
AppX4ztfk9wxr86nxmzzq47px0nh0e58b8fw_.log
WMP11.AssocFile.M2TS_.m2t
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.m2t
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.m2t
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.m2t
WMP11.AssocFile.M2TS_.m2ts
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.m2ts
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.m2ts
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.m2ts
WMP11.AssocFile.m3u_.m3u
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.m3u
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.m3u
AppX5sy1gww9q4g2gt941cdxxd7s07xe5vph_.m4a
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.m4a
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.m4a
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.m4r
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.m4v
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.m4v
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.m4v
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.mka
WMP11.AssocFile.MKV_.mkv
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mkv
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.mkv
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mkv
WMP11.AssocFile.MPEG_.mod
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mod
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mod
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mov
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.mov
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mov
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mp2
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.mp3
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.mp3
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mp4
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.mp4
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mp4
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mp4v
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.mp4v
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mp4v
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.mpa
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.mpa
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mpe
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mpe
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mpeg
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mpeg
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mpg
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mpg
WMP11.AssocFile.MPEG_.mpv2
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mpv2
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mpv2
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.mrw
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.mts
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.mts
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.mts
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.nef
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.nrw
AppXmgw6pxxs62rbgfp9petmdyb4fx7rnd4k_.obj
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.obj
AppXr0rz9yckydawgnrx5df1t9s57ne60yhn_.obj
AppXvhc4p7vz4b485xfp46hhk3fq3grkdgjg_.obj
AppXd7df65yysmdaz9xc1vjxts4ng22x2n5f_.obj
odtfile_.odt
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.oga
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.ogg
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.ogm
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.ogv
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.ogx
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.opus
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.orf
AppXd4nrz8ff68srnhf9t5a8sbjyar1cr723_.pdf
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.pef
AppXmgw6pxxs62rbgfp9petmdyb4fx7rnd4k_.ply
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.ply
AppXr0rz9yckydawgnrx5df1t9s57ne60yhn_.ply
AppXvhc4p7vz4b485xfp46hhk3fq3grkdgjg_.ply
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.png
AppXxf01pj590w7z9mxmyv3nx0a9ewj3e51g_.ps1
AppXc9vj55m1n3559gcjff0scsqeket80zp7_.psd1
AppX1b0e9ytcwx0wcmvkdey0h6af04t1ta3z_.psm1
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.raf
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.raw
rtffile_.rtf
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.rw2
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.rwl
AppX4ztfk9wxr86nxmzzq47px0nh0e58b8fw_.scp
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.sr2
AppX9rkaq77s0jzh1tyccadx9ghba15r6t3h_.srw
AppXmgw6pxxs62rbgfp9petmdyb4fx7rnd4k_.stl
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.stl
AppXr0rz9yckydawgnrx5df1t9s57ne60yhn_.stl
AppXvhc4p7vz4b485xfp46hhk3fq3grkdgjg_.stl
AppXde74bfzw9j31bzhcvsrxsyjnhhbq66cs_.svg
AppX43hnxtbyyps62jhe9sqpdzxn1790zetc_.tif
AppX86746z2101ayy2ygv3g96e4eqdf8r99j_.tif
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.tif
AppX43hnxtbyyps62jhe9sqpdzxn1790zetc_.tiff
AppX86746z2101ayy2ygv3g96e4eqdf8r99j_.tiff
AppXcdh38jxzbcberv50vxg2tg4k84kfnewn_.tiff
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.tod
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.tod
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.ts
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.ts
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.tts
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.tts
AppX4ztfk9wxr86nxmzzq47px0nh0e58b8fw_.txt
vcard_wab_auto_file_.vcf
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.wav
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.wav
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.webm
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.wm
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.wm
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.wm
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.wma
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.wma
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.wmv
AppXk0g4vb8gvt7b93tg50ybcy892pge6jmt_.wmv
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.wmv
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.wpl
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.wpl
AppX4ztfk9wxr86nxmzzq47px0nh0e58b8fw_.wtx
AppXcc58vyzkbjbs4ky0mxrmxf8278rk9b3t_.xml
AppX6eg8h5sxqq90pv53845wmnbewywdqq5h_.xvid
AppXmk63adfvvewttqzmezsgagxtcyyr84tx_.xvid
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs_.zpl
AppX9v2an58zgtq78h18jgmp43b5gza6b2jp_.zpl
AppXtggqqtcfspt6ks3fjzyfppwc05yxwtwy_mswindowsmusic
AppX6w6n4f8xch1s3vzwf3af6bfe88qhxbza_mswindowsvideo
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.bmp
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.dib
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.gif
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.ico
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.jfif
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.jpe
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.jpeg
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.jpg
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.png
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.tiff
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.tif
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.arw
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.cr2
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.crw
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.erf
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.kdc
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.mrw
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.nef
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.nrw
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.orf
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.pef
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.raw
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.rw2
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.rwl
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.sr2
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.srw
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.jxr
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.wdp
Windows.Sandbox_.wsb
AppX2jm25qtmp2qxstv333wv5mne3k5bf4bm_.dng
AppXq0fevzme2pys62n3e0fbqa7peapykr8v_http
AppX90nv6nhay5n6a98fnetv7tpk64pp35es_https
AppX7rm9drdg8sk7vqndwj3sdjw11x96jc0y_microsoft-edge
AppX3xxs313wwkfjhythsb8q46xdsq8d2cvv_microsoft-edge-holographic
AppXdn5b0j699ka5fqvrr3pgjad0evqarm6d_ms-xbl-3d8b930f
Paint.Picture_.bmp
WinRAR_.cab
chm.file_.chm
Applications\Notepad.exe_.css
Applications\WordPad.exe_.css
Excel.CSV_.csv
Applications\Notepad.exe_.csv
Applications\WordPad.exe_.csv
Paint.Picture_.dib
Word.Document.8_.doc
Word.Document.12_.docx
giffile_.gif
PBrush_.gif
inffile_.inf
inifile_.ini
Applications\WordPad.exe_.ini
WinRAR_.iso
Windows.IsoFile_.iso
PBrush_.jfif
PBrush_.jpe
PBrush_.jpeg
PBrush_.jpg
JSFile_.js
wdpfile_.jxr
txtfile_.log
Access.MDBFile_.mdb
MSInfoFile_.nfo
odcfile_.odc
OneNote.Section.1_.one
OneNote.TableOfContents.12_.onetoc2
PBrush_.png
PowerPoint.Show.8_.ppt
PowerPoint.Show.12_.pptx
Microsoft.PowerShellScript.1_.ps1
Microsoft.PowerShellData.1_.psd1
Microsoft.PowerShellModule.1_.psm1
Outlook.File.pst.15_.pst
WinRAR_.rar
regfile_.reg
Word.RTF.8_.rtf
txtfile_.scp
TIFImage.Document_.tif
PBrush_.tif
TIFImage.Document_.tiff
PBrush_.tiff
ttffile_.ttf
txtfile_.txt
textfile_.txt
wdpfile_.wdp
PBrush_.webp
ChromeHTML_.webp
MSEdgeHTM_.webp
FirefoxHTML-308046B0AF4A39CB_.webp
txtfile_.wtx
Excel.Sheet.8_.xls
Excel.Sheet.12_.xlsx
xmlfile_.xml
Applications\Notepad.exe_.xml
Applications\WordPad.exe_.xml
CompressedFolder_.zip
WinRAR.ZIP_.zip
IE.HTTP_http
ChromeHTML_http
MSEdgeHTM_http
FirefoxURL-308046B0AF4A39CB_http
IE.HTTPS_https
ChromeHTML_https
MSEdgeHTM_https
FirefoxURL-308046B0AF4A39CB_https
MSEdgeHTM_microsoft-edge
WMP11.AssocFile.3G2_.3g2
WMP11.AssocFile.3GP_.3gp
WMP11.AssocFile.3G2_.3gp2
WMP11.AssocFile.3GP_.3gpp
WMP11.AssocFile.ADTS_.aac
WMP11.AssocFile.ADTS_.adt
WMP11.AssocFile.ADTS_.adts
WMP11.AssocFile.AVI_.avi
WMP11.AssocFile.FLAC_.flac
htmlfile_.htm
ChromeHTML_.htm
MSEdgeHTM_.htm
FirefoxHTML-308046B0AF4A39CB_.htm
Applications\notepad.exe_.htm
htmlfile_.html
ChromeHTML_.html
MSEdgeHTM_.html
FirefoxHTML-308046B0AF4A39CB_.html
WMP11.AssocFile.M4A_.m4a
WMP11.AssocFile.MP4_.m4v
WMP11.AssocFile.MKA_.mka
AppXe862j7twqs4aww05211jaakwxyfjx4da_read
WMP11.AssocFile.MOV_.mov
MSEdgeHTM_.mht
WMP11.AssocFile.MP3_.MP2
MSEdgeMHT_.mht
MSEdgeHTM_.mhtml
WMP11.AssocFile.MP3_.mp3
MSEdgeMHT_.mhtml
WMP11.AssocFile.MP4_.mp4
WMP11.AssocFile.MP4_.mp4v
WMP11.AssocFile.MPEG_.mpa
WMP11.AssocFile.MPEG_.MPE
WMP11.AssocFile.MPEG_.mpeg
WMP11.AssocFile.MPEG_.mpg
WMP11.AssocFile.M2TS_.mts
ChromeHTML_.pdf
MSEdgePDF_.pdf
FirefoxHTML-308046B0AF4A39CB_.pdf
svgfile_.svg
ChromeHTML_.svg
MSEdgeHTM_.svg
FirefoxHTML-308046B0AF4A39CB_.svg
WMP11.AssocFile.TTS_.TS
WMP11.AssocFile.TTS_.TTS
InternetShortcut_.url
WMP11.AssocFile.WAV_.wav
Microsoft.Website_.website
WMP11.AssocFile.ASF_.wm
WMP11.AssocFile.WMA_.wma
WMP11.AssocFile.WMV_.wmv
WMP11.AssocFile.WPL_.WPL
ChromeHTML_mailto
MSEdgeHTM_mailto
Outlook.URL.mailto.15_mailto
FirefoxURL-308046B0AF4A39CB_mailto
MSEdgeHTM_read
----------------------------------------
appcompatflags v.20200525
(NTUSER.DAT, Software) Extracts AppCompatFlags for Windows.


Software\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Compatibility Assistant\Store
  2019-12-07 09:08:44Z - C:\Program Files\Microsoft OneDrive\21.205.1003.0003\Microsoft.SharePoint.exe
----------------------------------------
appkeys v.20200517
(NTUSER.DAT, Software) Extracts AppKeys entries.

----------------------------------------
applets v.20200525
(NTUSER.DAT) Gets contents of user's Applets key

Applets
Software\Microsoft\Windows\CurrentVersion\Applets
LastWrite Time 2021-11-01 20:44:58Z

Software\Microsoft\Windows\CurrentVersion\Applets\Paint\Recent File List not found.
----------------------------------------
apppaths v.20200511
(NTUSER.DAT,Software) Gets content of App Paths subkeys

----------------------------------------
Software\Microsoft\IntelliPoint\AppSpecific not found.
----------------------------------------
appx v.20200427
(NTUSER.DAT, USRCLASS.DAT) Checks for persistence via Universal Windows Platform Apps

----------------------------------------
arpcache v.20200515
(NTUSER.DAT) Retrieves CurrentVersion\App Management\ARPCache entries

Software\Microsoft\Windows\CurrentVersion\App Management\ARPCache not found.
----------------------------------------
attachmgr v.20200525
(NTUSER.DAT) Checks user's keys that manage the Attachment Manager functionality

Software\Microsoft\Windows\CurrentVersion\Policies\Associations not found.

Software\Microsoft\Windows\CurrentVersion\Policies\Attachments not found.

----------------------------------------
cached v.20200525
(NTUSER.DAT) Gets cached Shell Extensions from NTUSER.DAT hive

Software\Microsoft\Windows\CurrentVersion\Shell Extensions\Cached
LastWrite Time 2021-11-01 20:49:31Z

2021-11-01 20:44:23Z  First Load: {FBF23B40-E3F0-101B-8488-00AA003E56F8} (IShellLinkW)
2021-11-01 20:44:23Z  First Load: {4234D49B-0245-4DF3-B780-3893943456E1} (IShellFolder)
2021-11-01 20:44:24Z  First Load: {B2952B16-0E07-4E5A-B993-58C52CB94CAE} (IShellFolder)
2021-11-01 20:44:30Z  First Load: {C7657C4A-9F68-40FA-A4DF-96BC08EB3551} ({E357FCCD-A995-4576-B01F-234630154E96})
2021-11-01 20:44:30Z  First Load: {BBACC218-34EA-4666-9D7A-C78F2274A524} (IShellIconOverlayIdentifier)
2021-11-01 20:44:30Z  First Load: {5AB7172C-9C11-405C-8DD5-AF20F3606282} (IShellIconOverlayIdentifier)
2021-11-01 20:44:30Z  First Load: {A78ED123-AB77-406B-9962-2A5D9D2F7F30} (IShellIconOverlayIdentifier)
2021-11-01 20:44:30Z  First Load: {F241C880-6982-4CE5-8CF7-7085BA96DA5A} (IShellIconOverlayIdentifier)
2021-11-01 20:44:30Z  First Load: {A0396A93-DC06-4AEF-BEE9-95FFCCAEF20E} (IShellIconOverlayIdentifier)
2021-11-01 20:44:30Z  First Load: {9AA2F32D-362A-42D9-9328-24A483E2CCC3} (IShellIconOverlayIdentifier)
2021-11-01 20:44:30Z  First Load: {C5FF006E-2AE9-408C-B85B-2DFDD5449D9C} (IShellIconOverlayIdentifier)
2021-11-01 20:44:30Z  First Load: {A8E52322-8734-481D-A7E2-27B309EF8D56} (IShellIconOverlayIdentifier)
2021-11-01 20:44:30Z  First Load: {51EF1569-67EE-4AD6-9646-E726C3FFC8A2} (IShellIconOverlayIdentifier)
2021-11-01 20:44:30Z  First Load: {CFE8B367-77A7-41D7-9C90-75D16D7DC6B6} (IShellIconOverlayIdentifier)
2021-11-01 20:44:30Z  First Load: {C973DA94-CBDF-4E77-81D1-E5B794FBD146} (IShellIconOverlayIdentifier)
2021-11-01 20:44:36Z  First Load: {40DD6E20-7C17-11CE-A804-00AA003CA9F6} (IShellCopyHookW)
2021-11-01 20:44:44Z  First Load: {04731B67-D933-450A-90E6-4ACD2E9408FE} (IDelegateFolder)
2021-11-01 20:44:58Z  First Load: {2227A280-3AEA-1069-A2DE-08002B30309D} (IShellFolder)
2021-11-01 20:44:58Z  First Load: {72C984BA-0666-4D3F-A0DE-96BF43838E6E} ({0CB6E812-BD37-4416-BFAE-E44A7C15B453})
2021-11-01 20:44:59Z  First Load: {BD7A2E7B-21CB-41B2-A086-B309680C6B7E} (IShellFolder)
2021-11-01 20:44:59Z  First Load: {9E175B8B-F52A-11D8-B9A5-505054503030} (IDBProperties)
2021-11-01 20:45:01Z  First Load: {596AB062-B4D2-4215-9F74-E9109B0A8153} (IContextMenu)
2021-11-01 20:45:01Z  First Load: {474C98EE-CF3D-41F5-80E3-4AAB0AB04301} (IContextMenu)
2021-11-01 20:45:01Z  First Load: {00021401-0000-0000-C000-000000000046} (IContextMenu)
2021-11-01 20:45:01Z  First Load: {B41DB860-64E4-11D2-9906-E49FADC173CA} (IContextMenu)
2021-11-01 20:45:01Z  First Load: {CB3D0F55-BC2C-4C1A-85ED-23ED75B5106B} (IContextMenu)
2021-11-01 20:45:01Z  First Load: {470C0EBD-5D73-4D58-9CED-E91E22E23282} (IContextMenu)
2021-11-01 20:45:01Z  First Load: {11DBB47C-A525-400B-9E80-A54615A090C0} (IExecuteCommand)
2021-11-01 20:45:01Z  First Load: {B7373566-8FF2-45D8-AF1F-DA39F289BCF9} (IExplorerCommand)
2021-11-01 20:45:01Z  First Load: {F02C1A0D-BE21-4350-88B0-7367FC96EF3C} (IShellFolder)
2021-11-01 20:45:02Z  First Load: {FBF23B40-E3F0-101B-8488-00AA003E56F8} (IExtractIconW)
2021-11-01 20:45:06Z  First Load: {289AF617-1CC3-42A6-926C-E6A863F0E3BA} (IDelegateFolder)
2021-11-01 20:45:06Z  First Load: {35786D3C-B075-49B9-88DD-029876E11C01} (IDelegateFolder)
2021-11-01 20:45:06Z  First Load: {9113A02D-00A3-46B9-BC5F-9C04DADDD5D7} (IDelegateFolder)
2021-11-01 20:45:08Z  First Load: {2854F705-3548-414C-A113-93E27C808C85} (IContextMenu)
2021-11-01 20:45:10Z  First Load: {9343812E-1C37-4A49-A12E-4B2D810D956B} (IShellFolder)
2021-11-01 20:45:20Z  First Load: {FF393560-C2A7-11CF-BFF4-444553540000} (IShellFolder)
2021-11-01 20:46:35Z  First Load: {0CD7A5C0-9F37-11CE-AE65-08002B2E1262} (IShellFolder)
2021-11-01 20:46:42Z  First Load: {E61BF828-5E63-4287-BEF1-60B1A4FDE0E3} (IContextMenu)
2021-11-01 20:46:42Z  First Load: {F81E9010-6EA4-11CE-A7FF-00AA003CA9F6} (IContextMenu)
2021-11-01 20:46:42Z  First Load: {99D353BC-C813-41EC-8F28-EAE61E702E57} (IExplorerCommand)
2021-11-01 20:46:42Z  First Load: {EE15C2BD-CECB-49F8-A113-CA1BFC528F5B} (IContextMenu)
2021-11-01 20:46:42Z  First Load: {5E2121EE-0300-11D4-8D3B-444553540000} (IContextMenu)
2021-11-01 20:46:46Z  First Load: {7EFA68C6-086B-43E1-A2D2-55A113531240} ({000214E9-0000-0000-C000-000000000046})
2021-11-01 20:46:46Z  First Load: {F81E9010-6EA4-11CE-A7FF-00AA003CA9F6} ({000214E9-0000-0000-C000-000000000046})
2021-11-01 20:46:46Z  First Load: {1F2E5C40-9550-11CE-99D2-00AA006E086C} ({000214E9-0000-0000-C000-000000000046})
2021-11-01 20:46:46Z  First Load: {4A7DED0A-AD25-11D0-98A8-0800361B1103} ({000214E9-0000-0000-C000-000000000046})
2021-11-01 20:46:46Z  First Load: {596AB062-B4D2-4215-9F74-E9109B0A8153} ({000214E9-0000-0000-C000-000000000046})
2021-11-01 20:46:46Z  First Load: {ECCDF543-45CC-11CE-B9BF-0080C87CDBA6} ({000214E9-0000-0000-C000-000000000046})
2021-11-01 20:46:46Z  First Load: {748F920F-FB24-4D09-B360-BAF6F199AD6D} ({000214E9-0000-0000-C000-000000000046})
2021-11-01 20:47:17Z  First Load: {AB968F1E-E20B-403A-9EB8-72EB0EB6797E} (IExtractIconW)
2021-11-01 20:49:31Z  First Load: {E44E9428-BDBC-4987-A099-40DC8FD255E7} (IExecuteCommand)
----------------------------------------
cmdproc v.20200515
(NTUSER.DAT) Autostart - get Command Processor\AutoRun value from NTUSER.DAT hive

Software\Microsoft\Command Processor not found.
----------------------------------------
comdlg32 v.20200517

Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32 not found.
----------------------------------------
compdesc v.20200511
(NTUSER.DAT) Gets contents of user's ComputerDescriptions key

Software\Microsoft\Windows\CurrentVersion\Explorer\ComputerDescriptions not found.
----------------------------------------
DDO v.20140414
(NTUSER.DAT) Gets user's DeviceDisplayObjects key contents

Software\Microsoft\Windows NT\CurrentVersion\DeviceDisplayObjects not found.
----------------------------------------
disablemru v.20190924
(NTUSER.DAT, Software) Checks settings disabling user's MRUs

----------------------------------------
environment v.20200512
(System, NTUSER.DAT) Get environment vars from NTUSER.DAT & System hives

Environment
LastWrite Time: 2021-11-01 20:47:48Z

Path                      %USERPROFILE%\AppData\Local\Microsoft\WindowsApps;
TEMP                      %USERPROFILE%\AppData\Local\Temp                  
TMP                       %USERPROFILE%\AppData\Local\Temp                  
OneDrive                  C:\Users\osord\OneDrive                           
OneDriveConsumer          C:\Users\osord\OneDrive                           
----------------------------------------
featureusage v.20200511
(NTUSER.DAT) Extracts user's FeatureUsage data.

Software\Microsoft\Windows\CurrentVersion\Explorer\FeatureUsage
LastWrite Time:  2021-11-01 20:46:29Z
KeyCreationTime: 2021-11-01 20:45:01Z

***AppLaunch values***
Microsoft.Windows.Explorer                                                        1

***TrayButtonClicked values***
StartButton                                                                       5

----------------------------------------
[-] SOFTWARE\HeidiSQL not found.
[-] SOFTWARE\HeidiSQL\Servers not found.

----------------------------------------
[*] Desktop file Lists
::{645FF040-5081-101B-9F08-00AA002F954E}>   
Audacity.lnk> | 
Git Bash.lnk> | 
OBS Studio.lnk> | 
Google Docs.lnk>   
Google Sheets.lnk>   
Google Slides.lnk>   
Google Chrome.lnk>   
Microsoft Edge.lnk>   
----------------------------------------
identities v.20200525
(NTUSER.DAT) Extracts values from Identities key; NTUSER.DAT

Identities not found.

----------------------------------------
injectdll64 v.20200427
(NTUSER.DAT, Software) Retrieve values set to weaken Chrome security

Software\Policies\Google\Chrome\CertificateTransparencyEnforcementDisabledForUrls not found.
Policies\Google\Chrome\CertificateTransparencyEnforcementDisabledForUrls not found.
----------------------------------------
jumplistdata v.20200517
Gets contents of user's JumpListData key

Software\Microsoft\Windows\CurrentVersion\Search\JumpListData not found.
----------------------------------------
knowndev v.20200515
(NTUSER.DAT) Gets user's KnownDevices key contents

Software\Microsoft\Windows\CurrentVersion\Explorer\AutoplayHandlers\KnownDevices not found.
----------------------------------------
listsoft v.20200517
(NTUSER.DAT) Lists contents of user's Software key

List the contents of the Software key in the NTUSER.DAT hive
file, in order by LastWrite time.

2021-11-01 20:46:42Z 	ATI
2021-11-01 20:45:27Z 	SyncEngines
2021-11-01 20:45:26Z 	Microsoft
2021-11-01 20:45:12Z 	Brother
2021-11-01 20:45:09Z 	Realtek
2021-11-01 20:44:39Z 	RegisteredApplications
2021-11-01 20:44:23Z 	AMD
2021-11-01 20:44:23Z 	AppDataLow
2021-11-01 20:44:22Z 	Wow6432Node
2021-11-01 20:43:14Z 	Google
2021-11-01 20:43:14Z 	Policies
----------------------------------------
load v.20200517
(NTUSER.DAT) Gets load and run values from user hive

load
Software\Microsoft\Windows NT\CurrentVersion\Windows
LastWrite Time 2021-11-01 20:44:59Z

load value not found.
run value not found.
----------------------------------------
logonstats v.20200517
Gets contents of user's LogonStats key

FirstLogonTime                     :  Mon Nov 01 20:44:22 2021
FirstLogonTimeOnCurrentInstallation:  Mon Nov 01 20:44:22 2021
----------------------------------------
lxss v.20200511
(NTUSER.DAT) Gets WSL config.

Software\Microsoft\Windows\CurrentVersion\Lxss not found.
----------------------------------------
mixer v.20200517
(NTUSER.DAT) Checks user's audio mixer settings

LastWrite Time, App, Device GUID
2021-11-01 20:45:17Z,#,\\?\hdaudio#func_01&ven_10ec&dev_0887&subsys_1849d887&rev_1003#{6994ad04-93ef-11d0-a3cc-00a0c9223196}\singlelineouttopo/00010001
----------------------------------------
mmc v.20200517
(NTUSER.DAT) Get contents of user's MMC\Recent File List key

Software\Microsoft\Microsoft Management Console\Recent File List not found.
----------------------------------------
mmo v.20200517
(NTUSER.DAT) Checks NTUSER for Multimedia\Other values [malware]

Software\Microsoft\Multimedia\Other not found.
Software\Microsoft\CTF\LangBarAddIn not found.
----------------------------------------
mndmru v.20200517
(NTUSER.DAT) Get contents of user's Map Network Drive MRU

Software\Microsoft\Windows\CurrentVersion\Explorer\Map Network Drive MRU not found.
----------------------------------------
mp2 v.20200526
(NTUSER.DAT) Gets user's MountPoints2 key contents

MountPoints2
Software\Microsoft\Windows\CurrentVersion\Explorer\MountPoints2
LastWrite Time 2021-11-01 20:45:06Z

Remote Drives:

Volumes:
2021-11-01 20:45:06Z
  {22594948-0000-0000-0000-402400000000}
  {ccc0c2f2-0000-0000-0000-100000000000}
  {ccc0c2f2-0000-0000-0000-602200000000}

Drives:
2021-11-01 20:45:06Z - G
2021-11-01 20:44:22Z - CPC

Unique MAC Addresses:
60:22:00:00:00:00
10:00:00:00:00:00
40:24:00:00:00:00

Analysis Tip: Correlate the Volume entries to those found in the MountedDevices
entries that begin with "\??\Volume".
----------------------------------------
mpmru v.20200517
(NTUSER.DAT) Gets user's Media Player RecentFileList values

Software\Microsoft\MediaPlayer\Player\RecentFileList not found.
----------------------------------------
msoffice v.20200518






----------------------------------------
muicache v.20200525
(NTUSER.DAT,USRCLASS.DAT) Gets EXEs from user's MUICache key

Software\Microsoft\Windows\ShellNoRoam\MUICache not found.

Local Settings\Software\Microsoft\Windows\Shell\MUICache not found.
----------------------------------------
nation v.20200517
(ntuser.dat) Gets region information from HKCU

Nation Information Check
Control Panel\International\Geo
LastWrite time: 2021-11-01 20:43:14Z

The Region value is : 166
The Country Is: Mexico
For more information please visit the link below:
https://msdn.microsoft.com/en-us/library/aa723531.aspx

----------------------------------------
oisc v.20091125
(NTUSER.DAT) Gets contents of user's Office Internet Server Cache

Office Version: 
Software\Microsoft\Office\\Common\Internet\Server Cache not found.
----------------------------------------
onedrive v.20200515
(NTUSER.DAT) Gets contents of user's OneDrive key

Software\Microsoft\OneDrive
UserFolder                : C:\Users\osord\OneDrive
ClientFirstSignInTimestamp: 2021-11-01 20:45:27Z
NextMigrationScan         : 2021-11-08 20:45:31Z
----------------------------------------
OSVersion
Software\Microsoft
LastWrite Time 2021-11-01 20:45:26Z

OSVersion value not found.
----------------------------------------
outlookhomepage v.20201002
(NTUSER.DAT, Software) Retrieve values set to attack Outlook WebView Homepage

Looking for webview homepage modifications. If this value is pointing
to a URL outside the corporate domain it may be a malicious site.

Looking for key values associated with security.
If you see:
[Example]  EnableRoamingFolderHomepages : 1
[Example]  NonDefaultStoreScript : 1
[Example]  EnableUnsafeClientMailRules : 1
You may have a security vulnerability that allows attackers to hijack the URL

----------------------------------------
pendinggpos v.20200427
NTUSER.DAT - Gets contents of user's PendingGPOs key

Software\Microsoft\IEAK\GroupPolicy\PendingGPOs not found.
----------------------------------------
profiler v.20200525
(NTUSER.DAT, System) Environment profiler information

Environment
LastWrite Time 2021-11-01 20:47:48Z

Path -> %USERPROFILE%\AppData\Local\Microsoft\WindowsApps;
TEMP -> %USERPROFILE%\AppData\Local\Temp
TMP -> %USERPROFILE%\AppData\Local\Temp
OneDrive -> C:\Users\osord\OneDrive
OneDriveConsumer -> C:\Users\osord\OneDrive

----------------------------------------
pslogging v.20200515
(NTUSER.DAT, Software) Extracts PowerShell logging settings

Software\Policies\Microsoft\Windows\PowerShell not found.
Policies\Microsoft\Windows\PowerShell not found.
----------------------------------------
----------------------------------------
putty v.20200515
(NTUSER.DAT) Extracts the saved SshHostKeys for PuTTY.

Software\SimonTatham\PuTTY\SshHostKeys not found.

----------------------------------------
recentapps v.20200515
- Gets contents of user's RecentApps key

Software\Microsoft\Windows\CurrentVersion\Search\RecentApps not found.
----------------------------------------
recentdocs v.20200427
(NTUSER.DAT) Gets contents of user's RecentDocs key

RecentDocs
**All values printed in MRUList\MRUListEx order.
Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs
LastWrite Time: 2021-11-01 20:49:31Z
  1 = Esteban
  0 = .bash_history

Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.bash_history
LastWrite Time 2021-11-01 20:49:31Z
MRUListEx = 0
  0 = .bash_history

Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\Folder
LastWrite Time 2021-11-01 20:49:31Z
MRUListEx = 0
  0 = Esteban

----------------------------------------
run v.20200511
(Software, NTUSER.DAT) [Autostart] Get autostart key contents from Software hive

Software\Microsoft\Windows\CurrentVersion\Run
LastWrite Time 2021-11-01 20:45:28Z
  MicrosoftEdgeAutoLaunch_5A8B45B247433301748E579040B3A678 - "C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe" --no-startup-window --win-session-start /prefetch:5
  OneDrive - "C:\Program Files\Microsoft OneDrive\OneDrive.exe" /background

Software\Microsoft\Windows\CurrentVersion\Run has no subkeys.

Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Run not found.

Software\Microsoft\Windows\CurrentVersion\RunOnce
LastWrite Time 2021-11-01 20:45:11Z
Software\Microsoft\Windows\CurrentVersion\RunOnce has no values.
Software\Microsoft\Windows\CurrentVersion\RunOnce has no subkeys.

Software\Microsoft\Windows\CurrentVersion\RunServices not found.

Software\Microsoft\Windows\CurrentVersion\RunServicesOnce not found.

Software\Microsoft\Windows NT\CurrentVersion\Terminal Server\Install\Software\Microsoft\Windows\CurrentVersion\Run not found.

Software\Microsoft\Windows NT\CurrentVersion\Terminal Server\Install\Software\Microsoft\Windows\CurrentVersion\RunOnce not found.

Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run not found.

Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run not found.

Software\Microsoft\Windows\CurrentVersion\StartupApproved\Run not found.

Software\Microsoft\Windows\CurrentVersion\StartupApproved\Run32 not found.

Software\Microsoft\Windows\CurrentVersion\StartupApproved\StartupFolder not found.

----------------------------------------
runmru v.20200525
(NTUSER.DAT) Gets contents of user's RunMRU key

RunMru
Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU
LastWrite Time 2021-11-01 20:45:09Z
Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU has no values.
----------------------------------------
runvirtual v.20200427
(NTUSER.DAT, Software) Gets RunVirtual entries

----------------------------------------
searchscopes v.20200517
- Gets contents of user's SearchScopes key

Software\Microsoft\Internet Explorer\SearchScopes not found.
----------------------------------------
sevenzip v.20210329
- Gets records of histories from 7-Zip keys

Software\7-Zip not found.
Software\Wow6432Node\7-Zip not found.
----------------------------------------
shc v.20200427
(NTUSER.DAT) Gets SHC entries from user hive

Software\Microsoft\Windows\CurrentVersion\UFH\SHC
LastWrite Time 2021-11-01 20:44:23Z

0 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Audacity.lnk E:\Escritorio 2\Claves bandit\Audacity\Audacity.exe 
1 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Epic Games Launcher.lnk E:\Epic\Epic Games\Launcher\Portal\Binaries\Win32\EpicGamesLauncher.exe 
2 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Google Drive.lnk C:\Program Files\Google\Drive File Stream\52.0.6.0\GoogleDriveFS.exe 
3 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\PSeInt.lnk C:\Program Files (x86)\PSeInt\wxPSeInt.exe 
4 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Visual Studio Installer.lnk C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe 
5 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\ASRock Utility\A-Tuning\A-Tuning.lnk C:\Program Files (x86)\ASRock Utility\A-Tuning\Bin\ATuning.exe 
6 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Brother\Brother Utilities.lnk C:\Program Files (x86)\Brother\BrLauncher\BrLauncher.exe 
7 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Canon Utilities\IJ Scan Utility\IJ Scan Utility.lnk C:\Program Files (x86)\Canon\IJ Scan Utility\SCANUTILITY.exe 
8 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Git\Git Bash.lnk E:\scr\Git\git-bash.exe --cd-to-home
9 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Git\Git CMD.lnk E:\scr\Git\git-cmd.exe --cd-to-home
10 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Git\Git GUI.lnk E:\scr\Git\cmd\git-gui.exe 
11 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Java\Acerca de Java.lnk C:\Program Files\Java\jre1.8.0_45\bin\javacpl.exe -tab about
12 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Java\Comprobar Actualizaciones.lnk C:\Program Files\Java\jre1.8.0_45\bin\javacpl.exe -tab update
13 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Java\Configurar Java.lnk C:\Program Files\Java\jre1.8.0_45\bin\javacpl.exe 
14 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Logi\Logitech G HUB.lnk C:\Program Files\LGHUB\lghub.exe 
15 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Node.js\Install Additional Tools for Node.js.lnk C:\Windows\System32\cmd.exe /d /c "E:\NodeJS\install_tools.bat"
16 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Node.js\Node.js command prompt.lnk C:\Windows\System32\cmd.exe /k "E:\NodeJS\nodevars.bat"
17 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Node.js\Node.js.lnk E:\NodeJS\node.exe 
18 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Node.js\Uninstall Node.js.lnk C:\Windows\SysWOW64\msiexec.exe /x {6E12295D-9603-488D-9B22-F1812D4E978F}
19 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\OBS Studio\OBS Studio (64bit).lnk E:\Windows\OBS\obs-studio\bin\64bit\obs64.exe 
20 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Oracle VM VirtualBox\Oracle VM VirtualBox.lnk C:\Program Files\Oracle\VirtualBox\VirtualBox.exe 
21 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Python 3.9\IDLE (Python 3.9 64-bit).lnk C:\Users\Esteban\AppData\Local\Programs\Python\Python39\pythonw.exe "C:\Users\Esteban\AppData\Local\Programs\Python\Python39\Lib\idlelib\idle.pyw"
22 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Python 3.9\Python 3.9 (64-bit).lnk C:\Users\Esteban\AppData\Local\Programs\Python\Python39\python.exe 
23 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Python 3.9\Python 3.9 Manuals (64-bit).lnk C:\WINDOWS\hh.exe C:\Users\Esteban\AppData\Local\Programs\Python\Python39\Doc\python392.chm
24 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Python 3.9\Python 3.9 Module Docs (64-bit).lnk C:\Users\Esteban\AppData\Local\Programs\Python\Python39\python.exe -m pydoc -b
25 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Riot Games\League of Legends.lnk E:\Riot Games\Riot Client\RiotClientServices.exe --launch-product=league_of_legends --launch-patchline=live
26 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Riot Games\Riot Client.lnk E:\Riot Games\Riot Client\RiotClientServices.exe 
27 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Riot Games\VALORANT.lnk E:\Riot Games\Riot Client\RiotClientServices.exe --launch-product=valorant --launch-patchline=live
28 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Splashtop Wired XDisplay\Splashtop Wired XDisplay Agent.lnk C:\Program Files (x86)\Splashtop\Splashtop Wired XDisplay\Agent\SWXDAgent.exe 
29 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Visual Studio 2017\Visual Studio Tools\Símbolo del sistema para desarrolladores de VS 2017.lnk C:\WINDOWS\system32\cmd.exe /k "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\Common7\Tools\VsDevCmd.bat"
30 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Visual Studio 2017\Visual Studio Tools\VC\Símbolo del sistema de las herramientas cruzadas x86_x64 de VS 2017.lnk C:\WINDOWS\system32\cmd.exe /k "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvarsx86_amd64.bat"
31 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Visual Studio 2017\Visual Studio Tools\VC\Símbolo del sistema de las herramientas nativas x64 de VS 2017.lnk C:\WINDOWS\system32\cmd.exe /k "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvars64.bat"
32 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Visual Studio 2017\Visual Studio Tools\VC\x64_x86 Símbolo del sistema de las herramientas cruzadas para VS 2017.lnk C:\WINDOWS\system32\cmd.exe /k "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvarsamd64_x86.bat"
33 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Visual Studio 2017\Visual Studio Tools\VC\x86 Native Tools Command Prompt for VS 2017.lnk C:\WINDOWS\system32\cmd.exe /k "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvars32.bat"
34 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Windows Kits\Application Verifier (X64)\Application Verifier (X64).lnk C:\Windows\System32\appverif.exe 
35 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Windows Kits\Application Verifier (X86)\Application Verifier (WOW).lnk C:\Windows\SysWOW64\appverif.exe 
36 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Windows Kits\Windows App Certification Kit\Windows App Cert Kit.lnk C:\Program Files (x86)\Windows Kits\10\App Certification Kit\appcertui.exe 
37 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Windows Kits\Windows Software Development Kit\Windows Software Development Kit.lnk C:\WINDOWS\explorer.exe "C:\Program Files (x86)\Windows Kits\10\"
38 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\WinRAR\WinRAR.lnk C:\Program Files\WinRAR\WinRAR.exe 
----------------------------------------
shellfolders v.20200515
Gets user's shell folders values

Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders
LastWrite Time 2021-11-01 20:44:24Z
StartUp folder : C:\Users\osord\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup

Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders
LastWrite Time 2021-11-01 20:45:28Z
StartUp folder : %USERPROFILE%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup
----------------------------------------
speech v.20200427
(NTUSER.DAT) Get values from user's Speech key

Software\Microsoft\Speech
----------------------------------------
Software\SysInternals not found.
----------------------------------------
Launching tsclient v.20200518
(NTUSER.DAT) Displays contents of user's Terminal Server Client\Default key

Software\Microsoft\Terminal Server Client\Default not found.

Software\Microsoft\Terminal Server Client\Servers not found.
----------------------------------------
typedpaths v.20200526
(NTUSER.DAT) Gets contents of user's typedpaths key

Software\Microsoft\Windows\CurrentVersion\Explorer\TypedPaths
LastWrite Time 2021-11-01 20:50:27Z

url1     C:\Users                      
----------------------------------------
typedurls v.20200526
(NTUSER.DAT) Returns contents of user's TypedURLs key.

TypedURLs
Software\Microsoft\Internet Explorer\TypedURLs
LastWrite Time 2021-11-01 20:44:23Z
  url1 -> http://go.microsoft.com/fwlink/p/?LinkId=255141
----------------------------------------
typedurlstime v.20200526
(NTUSER.DAT) Returns contents of user's TypedURLsTime key.

Software\Microsoft\Internet Explorer\TypedURLsTime not found.
----------------------------------------
uninstall v.20200525
(Software, NTUSER.DAT) Gets contents of Uninstall keys from Software, NTUSER.DAT hives

Uninstall
Software\Microsoft\Windows\CurrentVersion\Uninstall

Software\Microsoft\Windows\CurrentVersion\Uninstall has no subkeys.
----------------------------------------
UserAssist
Software\Microsoft\Windows\CurrentVersion\Explorer\UserAssist
LastWrite Time 2021-11-01 20:44:23Z

{9E04CAB2-CC14-11DF-BB8C-A2F1DED72085}

{A3D53349-6E61-4557-8FC7-0028EDCEEBF6}

{B267E3AD-A825-4A09-82B9-EEC22AA3B847}

{BCB48336-4DDD-48FF-BB0B-D3190DACB3E2}

{CAA59E3C-4792-41A5-9909-6A6A8D32490E}

{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}
2021-11-01 20:45:01Z
  Microsoft.Windows.Explorer (2)
2021-11-01 20:42:42Z
  Microsoft.Getstarted_8wekyb3d8bbwe!App (14)
  Microsoft.WindowsFeedbackHub_8wekyb3d8bbwe!App (13)
  Microsoft.WindowsMaps_8wekyb3d8bbwe!App (12)
  Microsoft.People_8wekyb3d8bbwe!x4c7a3b7dy2188y46d4ya362y19ac5a5805e5x (11)
  Microsoft.MicrosoftStickyNotes_8wekyb3d8bbwe!App (10)
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\SnippingTool.exe (9)
  Microsoft.WindowsCalculator_8wekyb3d8bbwe!App (8)
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\mspaint.exe (7)

Value names with no time stamps:
  UEME_CTLCUACount:ctor
  Microsoft.Windows.CloudExperienceHost_cw5n1h2txyewy!App
  MSEdge
  Microsoft.Windows.Search_cw5n1h2txyewy!CortanaUI
  Microsoft.Windows.StartMenuExperienceHost_cw5n1h2txyewy!App
  {1AC14E77-02E7-4E5D-B744-2EB1AE5198B7}\OpenWith.exe

{F2A1CB5A-E3CC-4A2E-AF9D-505A7009D442}

{F4E57C4B-2036-45F0-A9AB-443BCFE33D9F}
2021-11-01 20:45:01Z
  {9E3995AB-1F9C-4F13-B827-48B24B6C7174}\TaskBar\File Explorer.lnk (2)
2021-11-01 20:42:42Z
  {0139D44E-6AFE-49F2-8690-3DAFCAE6FFB8}\Accessories\Snipping Tool.lnk (9)
  {0139D44E-6AFE-49F2-8690-3DAFCAE6FFB8}\Accessories\Paint.lnk (7)

Value names with no time stamps:
  UEME_CTLCUACount:ctor

{FA99DFC7-6AC2-453A-A5E2-5E2AFF4507BD}

----------------------------------------
wc_shares v.20200515
- Gets contents of user's WorkgroupCrawler/Shares subkeys

Software\Microsoft\Windows\CurrentVersion\Explorer\WorkgroupCrawler\Shares not found.
----------------------------------------
winrar v.20200526
(NTUSER.DAT) Get WinRAR\ArcHistory entries

Software\WinRAR\ArcHistory not found.
----------------------------------------
winscp v.20201227
(NTUSER.DAT) Gets user's WinSCP 2 data

Software\Martin Prikryl\WinSCP 2 not found.
----------------------------------------
winzip v.20200526
(NTUSER.DAT) Get WinZip extract and filemenu values

Software\Nico Mak Computing\WinZip not found.
----------------------------------------
wordwheelquery v.20200823
(NTUSER.DAT) Gets contents of user's WordWheelQuery key

Software\Microsoft\Windows\CurrentVersion\Explorer\WordWheelQuery not found.
----------------------------------------
